apiVersion: apps/v1
kind: Deployment
metadata:
  name: openchaos-controller
spec:
  replicas: 1
  selector:
    matchLabels:
      app: openchaos-controller
  template:
    metadata:
      labels:
        app: openchaos-controller
    spec:
      initContainers:
        - name: init-create-file
          image: registry.cn-guangzhou.aliyuncs.com/cc-aliyun/busybox
          command:
            ["sh", "-c", "touch /chaos-framework/report/chaos-mesh-fault"]
          volumeMounts:
            - name: report-volume
              mountPath: /chaos-framework/report
      containers:
        - name: openchaos-controller
          image: registry.cn-guangzhou.aliyuncs.com/cc-aliyun/openchaos:v1.5
          imagePullPolicy: IfNotPresent
          env:
            - name: CHAOS_MESH_LOG_FILE
              value: /chaos-framework/report/chaos-mesh-fault
          command: ["/bin/sh"]
          args: ["-c", "tail -f /dev/null"]
          ports:
            - containerPort: 8080
          volumeMounts:
            - name: rocketmq-volume
              mountPath: /chaos-framework/driver-rocketmq
            - name: report-volume
              mountPath: /chaos-framework/report
        - name: sidecar-container
          image: registry.cn-guangzhou.aliyuncs.com/cc-aliyun/busybox
          imagePullPolicy: IfNotPresent
          command: ["/bin/sh"]
          args: ["-c", "tail -f /dev/null"]
          volumeMounts:
            - name: report-volume
              mountPath: /chaos-framework/report
      volumes:
        - name: rocketmq-volume
          configMap:
            name: ${configmap_name}
        - name: report-volume
          emptyDir: {}
